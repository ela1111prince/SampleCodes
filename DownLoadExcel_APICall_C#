using IQA_AutomationMVC.Models;
using IQA_AutomationMVC.Utilities;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using OfficeOpenXml.Style;
using OfficeOpenXml;
using System.Data;
using System.Net.Http.Headers;
using System.Security.Claims;
using System.Text;
 
namespace IQA_AutomationMVC.Controllers
{
    [Authorize]
    public class DashBoardViewController : Controller
    {
        private readonly ILogger<DashBoardViewController> _logger;
        private readonly IConfiguration Configuration;
        public DashBoardViewController(ILogger<DashBoardViewController> logger, IConfiguration configuration)
        {
            _logger = logger;
            Configuration = configuration;
        }
 
 
        public IActionResult DashBoardView()
        {
            return View();
        }
 
 
        public DataTable GetDataTableData(DashBoardInput dashBoardInput)
        {
            ClaimsIdentity claimsIdentity = new ClaimsIdentity();
            string EmpCode = ((ClaimsIdentity)User.Identity).FindFirst("EmpCode").ToString().Split(':')[1].Trim();
            dashBoardInput.LoggedInEmpCode = EmpCode;
            List<DashBoardDetails> dashBoardDetails = new List<DashBoardDetails>();
            using (var client1 = new HttpClient())
            {
 
 
                client1.BaseAddress = new Uri(Configuration["APIDomain"].ToString());
 
                var myContent = JsonConvert.SerializeObject(dashBoardInput);
                var buffer = System.Text.Encoding.UTF8.GetBytes(myContent);
                var byteContent = new ByteArrayContent(buffer);
                byteContent.Headers.ContentType = new MediaTypeHeaderValue("application/json");
 
                client1.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                var Res = client1.PostAsync("AuditDashboard/GetAuditDashboardReports", byteContent).GetAwaiter().GetResult();
                if (Res.IsSuccessStatusCode)
                {
 
                    var Response = Res.Content.ReadAsStringAsync().Result;
 
                    dashBoardDetails = JsonConvert.DeserializeObject<List<DashBoardDetails>>(Response);
                }
            }
 
            DataTable DT = ToDataTableCLS.ToDataTable(dashBoardDetails);
            return DT;
 
        }
 
 
        public IActionResult CreateDownloadForDashBoard(string ProjectCode, string templateID, string startAuditMonth, string endAuditMonth, string l1, string l2, string l3, string l4,string CycleYear)
        {
            DashBoardInput dashBoardInput = new DashBoardInput();
            dashBoardInput.ProjectCode = ProjectCode;
            dashBoardInput.TemplateID = templateID;
            dashBoardInput.StartAuditMonth = startAuditMonth;
            dashBoardInput.EndAuditMonth = endAuditMonth;
            dashBoardInput.L1 = l1;
            dashBoardInput.L2 = l2;
            dashBoardInput.L3 = l3;
            dashBoardInput.L4 = l4;
            dashBoardInput.CycleYear=CycleYear;
            string filename = "IQA_DashBoardReport_" + DateTime.Now + ".xlsx";
            //ExcelPackage. = LicenseContext.;
            DataTable DT = new DataTable();
            DT = GetDataTableData(dashBoardInput);
 
            Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);
            var encoding = Encoding.GetEncoding("IBM437");
            using (ExcelPackage pck = new ExcelPackage())
            {
                ExcelWorksheet datasheet = pck.Workbook.Worksheets.Add("data");
 
 
                datasheet.Cells["A1"].LoadFromDataTable(DT, true);
                datasheet.Cells["A1:Z1"].Style.Fill.PatternType = ExcelFillStyle.Solid;
                datasheet.Cells["A1:Z1"].Style.Fill.BackgroundColor.SetColor(System.Drawing.Color.Silver);
                datasheet.Cells["A1:Z1"].AutoFitColumns();
                string ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
 
 
                Byte[] fileBytes = pck.GetAsByteArray();
                return File(fileBytes, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", filename);
 
            }
 
 
        }
    }
}
